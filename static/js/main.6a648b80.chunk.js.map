{"version":3,"sources":["App.tsx","index.tsx"],"names":["EmptyImage","id","width","height","xmlns","role","preserveAspectRatio","focusable","fill","x","y","dy","ScrapAction","prop","useState","hint","setHint","nRedirect","setNRedirect","nError","setNError","useEffect","hasRedirect","v","response_status","hasError","hasMissMatch","og_info","url_match","needRedirect","text","i","isLast","ListItem","secondaryAction","Button","size","onClick","onHtmlClick","sx","padding","minWidth","Chip","borderRadius","label","color","ListItemText","primary","url","secondary","og_image","og_url","Divider","App","setUrl","urlValid","setUrlValid","scraps","setScraps","lastScrap","setLastScrap","html","setHtml","modal","setModal","onFetch","setOnFetch","CssBaseline","Container","Box","Stack","spacing","Paper","elevation","TextField","fullWidth","error","value","onChange","e","target","isURL","type","variant","fetch","encodeURIComponent","then","res","json","data","length","finally","marginTop","disabled","LinearProgress","List","dense","map","Card","maxWidth","CardMedia","component","image","CardContent","Typography","wordBreak","Modal","open","onClose","position","top","left","transform","bgcolor","border","boxShadow","overflow","p","rootElement","document","getElementById","ReactDOMClient","render"],"mappings":"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","file":"static/js/main.6a648b80.chunk.js","sourcesContent":["import CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Modal,\n  Paper,\n  Stack,\n  TextField,\n  Typography,\n  LinearProgress\n} from \"@mui/material\";\nimport isURL from \"validator/lib/isURL\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\n\ninterface OgInfo {\n  og_image: string;\n  og_url: string;\n  url_match: boolean;\n}\ninterface ScrapResult {\n  url: string;\n  response_status: number;\n  h_location: string;\n  html: string;\n  og_info?: OgInfo;\n}\ninterface ScrapActionProp {\n  v: ScrapResult;\n  i: number;\n  isLast: boolean;\n  onHtmlClick?: () => void;\n}\n\nconst EmptyImage = () => {\n  return (\n    <svg\n      id=\"noimage\"\n      width=\"100%\"\n      height=\"140\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      role=\"img\"\n      aria-label=\"Placeholder: Image cap\"\n      preserveAspectRatio=\"xMidYMid slice\"\n      focusable=\"false\"\n    >\n      <title>Placeholder</title>\n      <rect width=\"100%\" height=\"100%\" fill=\"#868e96\"></rect>\n      <text x=\"41.5%\" y=\"50%\" fill=\"#dee2e6\" dy=\".3em\">\n        No Image\n      </text>\n    </svg>\n  );\n};\n\nconst ScrapAction = (prop: ScrapActionProp) => {\n  const [hint, setHint] = useState<String>(\"\");\n  const [nRedirect, setNRedirect] = useState<boolean>(false);\n  const [nError, setNError] = useState<boolean>(false);\n\n  useEffect(() => {\n    const hasRedirect =\n      prop.v.response_status >= 300 && prop.v.response_status < 400;\n    const hasError =\n      prop.v.response_status < 200 || prop.v.response_status >= 400;\n    const hasMissMatch = (prop.v.og_info?.url_match ?? true) === false;\n    const needRedirect = hasRedirect || hasMissMatch;\n\n    setNRedirect(needRedirect);\n    setNError(hasError);\n\n    let text = \"완료\";\n    if (prop.i === 3 && needRedirect) {\n      text = \"최대 수집 시도 횟수 도닱\";\n    } else {\n      if (prop.isLast) {\n        if (hasMissMatch) {\n          text = \"완료[중복실행멈춤]\";\n        }\n      } else {\n        if (hasRedirect) {\n          text = \"리디렉션\";\n        } else if (hasMissMatch) {\n          text =\n            \"og:url 에서 다시 수집 [사유 :og:image와 og:url의 도메인이 같지 않음]\";\n        }\n      }\n    }\n    if (hasError) {\n      text = \"오류\";\n    }\n    setHint(text);\n  }, [prop]);\n\n  return (\n    <>\n      <ListItem\n        secondaryAction={\n          <div>\n            <Button\n              size=\"small\"\n              onClick={prop.onHtmlClick}\n              sx={{ padding: \"0px 8px\", minWidth: \"0px\" }}\n            >\n              HTML\n            </Button>\n            <Chip\n              size=\"small\"\n              sx={{\n                padding: \"0px 0px\",\n                borderRadius: 0\n              }}\n              label={prop.v.response_status}\n              color={nError ? \"error\" : nRedirect ? \"warning\" : \"success\"}\n            />\n          </div>\n        }\n      >\n        <ListItemText\n          primary={\"► \" + prop.v.url}\n          secondary={\n            prop.v.og_info ? (\n              <>\n                <span>[og:image] {prop.v.og_info.og_image}</span>\n                <br />\n                <span>[og:url] {prop.v.og_info.og_url}</span>\n              </>\n            ) : null\n          }\n        />\n      </ListItem>\n      <ListItem>\n        <Chip label={hint} size=\"small\" sx={{ width: \"100%\" }} />\n      </ListItem>\n      {prop.isLast ? null : <Divider />}\n    </>\n  );\n};\n\nexport default function App() {\n  const [url, setUrl] = useState<string>(\"https://developers.kakao.com\");\n  const [urlValid, setUrlValid] = useState<boolean>(true);\n  const [scraps, setScraps] = useState<ScrapResult[]>([]);\n  const [lastScrap, setLastScrap] = useState<ScrapResult>();\n  const [html, setHtml] = useState<string>();\n  const [modal, setModal] = useState<boolean>(false);\n  const [onFetch, setOnFetch] = useState<boolean>(false);\n  const urlChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setUrl(e.target.value);\n    setUrlValid(isURL(e.target.value));\n  };\n  const scrap = () => {\n    setOnFetch(true);\n    fetch(\"https://sample.chalcak.kr/scrap/go?url=\" + encodeURIComponent(url))\n      .then((res) => res.json())\n      .then((data) => {\n        setScraps(data);\n        setLastScrap(data[data.length - 1]);\n      })\n      .finally(() => {\n        setOnFetch(false);\n      });\n  };\n  return (\n    <>\n      <CssBaseline />\n      <Container>\n        <Box sx={{ height: \"100vh\", padding: \"16px 0px\" }}>\n          <Stack spacing={2}>\n            <Paper elevation={0}>\n              <TextField\n                fullWidth\n                error={!urlValid}\n                label=\"URL\"\n                size=\"small\"\n                value={url}\n                onChange={urlChange}\n                type=\"url\"\n              />\n              <Button\n                variant=\"contained\"\n                size=\"small\"\n                onClick={scrap}\n                sx={{ marginTop: \"4px\" }}\n                disabled={!urlValid}\n              >\n                스크랩 경로 디버깅\n              </Button>\n            </Paper>\n            {onFetch ? <LinearProgress /> : null}\n            <Paper elevation={2}>\n              <List dense={true}>\n                {scraps.map((v, i) => {\n                  return (\n                    <ScrapAction\n                      key={i}\n                      v={v}\n                      i={i}\n                      isLast={i === scraps.length - 1}\n                      onHtmlClick={() => {\n                        setHtml(v.html);\n                        setModal(true);\n                      }}\n                    />\n                  );\n                })}\n              </List>\n            </Paper>\n            <Card sx={{ maxWidth: 345 }}>\n              {lastScrap?.og_info?.og_image ? (\n                <CardMedia\n                  component=\"img\"\n                  height=\"140\"\n                  image={lastScrap?.og_info?.og_image}\n                />\n              ) : (\n                <EmptyImage />\n              )}\n              <CardContent>\n                <Typography\n                  variant=\"caption\"\n                  color=\"text.secondary\"\n                  sx={{ wordBreak: \"break-all\" }}\n                >\n                  {lastScrap?.og_info?.og_image}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Stack>\n        </Box>\n      </Container>\n      <Modal\n        open={modal}\n        onClose={() => {\n          setModal(!modal);\n        }}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"90vw\",\n            height: \"90vh\",\n            bgcolor: \"background.paper\",\n            border: \"2px solid #000\",\n            boxShadow: 24,\n            wordBreak: \"break-all\",\n            overflow: \"auto\",\n            p: 2\n          }}\n        >\n          {html}\n        </Box>\n      </Modal>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport * as ReactDOMClient from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement) {\n  const root = ReactDOMClient.createRoot(rootElement);\n  root.render(\n    <StrictMode>\n      <App />\n    </StrictMode>\n  );\n}\n"],"sourceRoot":""}